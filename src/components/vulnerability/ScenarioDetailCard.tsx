
import React from 'react';
import { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';
import { Scenario } from '@/store/types';
import { PortfolioImpact } from '@/store/types';

interface ScenarioDetailCardProps {
  scenario: Scenario | undefined;
  impact: PortfolioImpact | null | undefined;
}

export const ScenarioDetailCard: React.FC<ScenarioDetailCardProps> = ({
  scenario,
  impact
}) => {
  if (!scenario || !impact) return null;

  const formatCurrency = (value: number) => {
    return new Intl.NumberFormat('en-US', {
      style: 'currency',
      currency: 'USD',
      maximumFractionDigits: 0,
    }).format(value);
  };

  return (
    <Card className="mt-4">
      <CardHeader>
        <CardTitle className="text-lg">
          {scenario.name} - Asset Class Impact
        </CardTitle>
        <CardDescription>{scenario.description}</CardDescription>
      </CardHeader>
      <CardContent>
        <div className="space-y-3">
          {impact.assetClassImpacts && Object.entries(impact.assetClassImpacts).map(([assetClass, impact]) => (
            <div key={assetClass} className="flex justify-between border-b pb-2">
              <div>
                <div className="font-medium">{assetClass}</div>
                <div className="text-sm text-muted-foreground">
                  {formatCurrency(impact.originalValue)} â†’ {formatCurrency(impact.impactedValue)}
                </div>
              </div>
              <div className={`font-semibold ${impact.percentageChange >= 0 ? 'text-green-500' : 'text-red-500'}`}>
                {impact.percentageChange >= 0 ? '+' : ''}{impact.percentageChange.toFixed(2)}%
              </div>
            </div>
          ))}
        </div>
      </CardContent>
    </Card>
  );
};
