
import React from 'react';
import { VulnerabilityTable } from './VulnerabilityTable';
import { usePortfolioStore } from '@/store/portfolioStore';

interface ComparisonContentProps {
  sortedData: Record<string, number> | Record<string, Record<string, number>>;
  currentPortfolio: string | undefined;
  multiScenario?: boolean;
}

export const ComparisonContent = ({ 
  sortedData, 
  currentPortfolio,
  multiScenario = false
}: ComparisonContentProps) => {
  const { selectedScenarioId, scenarios } = usePortfolioStore();
  
  if (!multiScenario) {
    // Original single-scenario mode
    return (
      <div className="space-y-4">
        <VulnerabilityTable 
          sortedData={sortedData as Record<string, number>} 
          currentPortfolio={currentPortfolio}
        />
      </div>
    );
  } else {
    // Multi-scenario mode
    return (
      <div className="space-y-8">
        {scenarios.map(scenario => {
          // Create data for this specific scenario
          const scenarioData: Record<string, number> = {};
          
          Object.entries(sortedData as Record<string, Record<string, number>>).forEach(([individual, scores]) => {
            if (scores && scores[scenario.id] !== undefined) {
              scenarioData[individual] = scores[scenario.id];
            }
          });
          
          // Sort the data
          const sortedScenarioData: Record<string, number> = {};
          Object.entries(scenarioData)
            .sort((a, b) => b[1] - a[1])
            .forEach(([key, value]) => {
              sortedScenarioData[key] = value;
            });
            
          if (Object.keys(sortedScenarioData).length === 0) {
            return null;
          }
          
          return (
            <div key={scenario.id} className="space-y-2">
              <h4 className="font-medium text-base">{scenario.name} Scenario</h4>
              <VulnerabilityTable 
                sortedData={sortedScenarioData} 
                currentPortfolio={currentPortfolio}
              />
            </div>
          );
        })}
      </div>
    );
  }
};
