
import React from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { ScenarioImpactTable } from './vulnerability/ScenarioImpactTable';
import { ScenarioDetailCard } from './vulnerability/ScenarioDetailCard';
import { AssetClassMatrixTable } from './vulnerability/AssetClassMatrixTable';
import { useVulnerabilityComparison } from '@/hooks/useVulnerabilityComparison';

export const VulnerabilityComparison = () => {
  const {
    holdingsData,
    scenarios,
    expandedScenario,
    handleExpandScenario,
    calculateVulnerabilityScores,
    getAllAssetClasses
  } = useVulnerabilityComparison();
  
  if (!holdingsData) {
    return null;
  }
  
  const scenarioImpacts = calculateVulnerabilityScores();
  const allAssetClasses = getAllAssetClasses();
  
  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <div>
            <CardTitle>Portfolio Impact By Scenario</CardTitle>
            <CardDescription>
              Compare how each market scenario impacts {holdingsData.individualName}'s portfolio
            </CardDescription>
          </div>
        </CardHeader>
        <CardContent>
          <div className="space-y-6">
            <ScenarioImpactTable
              scenarioImpacts={scenarioImpacts}
              expandedScenario={expandedScenario}
              handleExpandScenario={handleExpandScenario}
            />
            
            {/* Expanded scenario details */}
            {expandedScenario && (() => {
              const scenario = scenarios.find(s => s.id === expandedScenario);
              const impact = scenarioImpacts.find(s => s.id === expandedScenario)?.impact;
              
              return (
                <ScenarioDetailCard scenario={scenario} impact={impact} />
              );
            })()}

            {/* Asset Class Impact Matrix */}
            <AssetClassMatrixTable 
              scenarioImpacts={scenarioImpacts}
              allAssetClasses={allAssetClasses}
              individualName={holdingsData.individualName}
            />
          </div>
        </CardContent>
      </Card>
    </div>
  );
};
